
package ClientServlet;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ReservationWebService", targetNamespace = "http://src.trains/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReservationWebService {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://src.trains/", className = "ClientServlet.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://src.trains/", className = "ClientServlet.HelloResponse")
    @Action(input = "http://src.trains/ReservationWebService/helloRequest", output = "http://src.trains/ReservationWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listReservations", targetNamespace = "http://src.trains/", className = "ClientServlet.ListReservations")
    @ResponseWrapper(localName = "listReservationsResponse", targetNamespace = "http://src.trains/", className = "ClientServlet.ListReservationsResponse")
    @Action(input = "http://src.trains/ReservationWebService/listReservationsRequest", output = "http://src.trains/ReservationWebService/listReservationsResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://src.trains/ReservationWebService/listReservations/Fault/ParseException")
    })
    public String listReservations()
        throws ParseException_Exception
    ;

    /**
     * 
     * @param identifiantTrain
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addReservation", targetNamespace = "http://src.trains/", className = "ClientServlet.AddReservation")
    @ResponseWrapper(localName = "addReservationResponse", targetNamespace = "http://src.trains/", className = "ClientServlet.AddReservationResponse")
    @Action(input = "http://src.trains/ReservationWebService/addReservationRequest", output = "http://src.trains/ReservationWebService/addReservationResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://src.trains/ReservationWebService/addReservation/Fault/ParseException")
    })
    public String addReservation(
        @WebParam(name = "identifiant_train", targetNamespace = "")
        Integer identifiantTrain)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param identifiantReservation
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercheReservation", targetNamespace = "http://src.trains/", className = "ClientServlet.RechercheReservation")
    @ResponseWrapper(localName = "rechercheReservationResponse", targetNamespace = "http://src.trains/", className = "ClientServlet.RechercheReservationResponse")
    @Action(input = "http://src.trains/ReservationWebService/rechercheReservationRequest", output = "http://src.trains/ReservationWebService/rechercheReservationResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://src.trains/ReservationWebService/rechercheReservation/Fault/ParseException")
    })
    public String rechercheReservation(
        @WebParam(name = "identifiant_reservation", targetNamespace = "")
        int identifiantReservation)
        throws ParseException_Exception
    ;

}
